#include <iostream>

class Overcoat {
private:
    std::string type;
    double price;
public:
    Overcoat(std::string t, double p) : type(t), price(p) {}

    bool operator==(const Overcoat& other) const {
        return type == other.type;
    }

    Overcoat& operator=(const Overcoat& other) {
        if (this != &other) {
            type = other.type;
            price = other.price;
        }
        return *this;
    }

    bool operator>(const Overcoat& other) const {
        return price > other.price;
    }
};

class Flat {
private:
    double area;
    double price;
public:
    Flat(double a, double p) : area(a), price(p) {}

    bool operator==(const Flat& other) const {
        return area == other.area;
    }

    Flat& operator=(const Flat& other) {
        if (this != &other) {
            area = other.area;
            price = other.price;
        }
        return *this;
    }

    bool operator>(const Flat& other) const {
        return price > other.price;
    }
};

int main() {
    Overcoat coat1("Winter", 200.0);
    Overcoat coat2("Spring", 150.0);
    Overcoat coat3("Winter", 250.0);

    if (coat1 == coat3)
        std::cout << "Типи пальт однакові" << std::endl;
    else
        std::cout << "Типи пальт відмінні" << std::endl;

    if (coat1 > coat2)
        std::cout << "Перше пальто дорожче за друге" << std::endl;
    else
        std::cout << "Перше пальто не дорожче за друге" << std::endl;

    Flat flat1(80.0, 100000.0);
    Flat flat2(80.0, 120000.0);
    Flat flat3(100.0, 150000.0);

    if (flat1 == flat2)
        std::cout << "Площі квартир однакові" << std::endl;
    else
        std::cout << "Площі квартир відмінні" << std::endl;

    if (flat1 > flat3)
        std::cout << "Перша квартира дорожча за третю" << std::endl;
    else
        std::cout << "Перша квартира не дорожча за третю" << std::endl;

    return 0;
}
